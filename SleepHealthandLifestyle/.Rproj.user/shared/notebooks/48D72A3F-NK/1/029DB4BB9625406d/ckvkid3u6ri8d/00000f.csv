"0","# accuracy_tune <- function(fit) {"
"0","#   predict_unseen <- predict(fit, test_data, type = 'class')"
"0","#   table_mat <- table(test_data$Sleep.Disorder, predict_unseen)"
"0","#   accuracy_Test <- sum(diag(table_mat)) / sum(table_mat)"
"0","#   accuracy_Test"
"0","# }"
"0",""
"0","control <- rpart.control(minsplit = 4,"
"0","                         minbucket = round(5 / 3),"
"0","                         maxdepth = 3,"
"0","                         cp = 0)"
"0","# tune_fit <- rpart(Sleep.Disorder~., data = train_data, method = 'class', control = control)"
"0",""
"0","tune_fit <- train("
"0","  Sleep.Disorder ~ .,"
"0","  data = train_data,"
"0","  method = ""rpart"","
"0","  tuneLength = 20,"
"0","  metric = 'ROC',"
"0","  trControl = trainControl("
"0","    method = 'cv',"
"0","    number = 10,"
"0","    savePredictions = 'final',"
"0","    classProbs =  TRUE,"
"0","    summaryFunction = "
"0","  )"
"0",")"
"2","Warning: The metric ""ROC"" was not in the result set. Accuracy will be used instead."
"0","tune_fit"
"1","CART"
"1"," "
"1","

"
"1","250"
"1",""
"1"," samples"
"1","
"
"1"," 12"
"1",""
"1"," predictor"
"1",""
"1","
"
"1","  3"
"1"," "
"1","classes:"
"1"," "
"1","'Insomnia', 'None', 'Sleep.Apnea'"
"1"," "
"1","
"
"1","
"
"1","No pre-processing
"
"1","Resampling:"
"1"," "
"1","Cross-Validated (10 fold)"
"1"," "
"1","
"
"1","Summary of sample sizes:"
"1"," "
"1","224, 224, 226, 225, 225, 225, ..."
"1"," "
"1","
"
"1","Resampling results"
"1"," across tuning parameters"
"1",":

"
"1",""
"1","  cp        "
"1","  Accuracy "
"1","  Kappa    "
"1","
"
"1","  0.00000000"
"1","  0.8842564"
"1","  0.7892894"
"1","
"
"1","  0.01627781"
"1","  0.8842564"
"1","  0.7892894"
"1","
"
"1","  0.03255562"
"1","  0.8842564"
"1","  0.7890853"
"1","
"
"1","  0.04883342"
"1","  0.8682564"
"1","  0.7530657"
"1","
"
"1","  0.06511123"
"1","  0.8682564"
"1","  0.7515615"
"1","
"
"1","  0.08138904"
"1","  0.8522564"
"1","  0.7233557"
"1","
"
"1","  0.09766685"
"1","  0.8522564"
"1","  0.7233557"
"1","
"
"1","  0.11394466"
"1","  0.8522564"
"1","  0.7233557"
"1","
"
"1","  0.13022246"
"1","  0.8522564"
"1","  0.7233557"
"1","
"
"1","  0.14650027"
"1","  0.8522564"
"1","  0.7233557"
"1","
"
"1","  0.16277808"
"1","  0.8522564"
"1","  0.7233557"
"1","
"
"1","  0.17905589"
"1","  0.8522564"
"1","  0.7233557"
"1","
"
"1","  0.19533370"
"1","  0.8522564"
"1","  0.7233557"
"1","
"
"1","  0.21161150"
"1","  0.8522564"
"1","  0.7233557"
"1","
"
"1","  0.22788931"
"1","  0.8522564"
"1","  0.7233557"
"1","
"
"1","  0.24416712"
"1","  0.8230897"
"1","  0.6399647"
"1","
"
"1","  0.26044493"
"1","  0.8230897"
"1","  0.6399647"
"1","
"
"1","  0.27672273"
"1","  0.8230897"
"1","  0.6399647"
"1","
"
"1","  0.29300054"
"1","  0.8230897"
"1","  0.6399647"
"1","
"
"1","  0.30927835"
"1","  0.6602308"
"1","  0.2042604"
"1","
"
"1","
"
"1","Accuracy was used to select the optimal model using the largest value.
"
"1","The final value used for the model was cp = 0.03255562."
"1","
"
"0","# accuracy_tune(tune_fit)"
"0",""
"0","tune_fit$bestTune"
